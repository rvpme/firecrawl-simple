version: '3.8'

services:
  puppeteer-service:
    image: trieve/puppeteer-service-ts:latest # Using the pre-built image
    environment:
      - PORT=3000
      # Add your proxy and 2captcha variables here if needed
      # - PROXY_SERVER=${PROXY_SERVER}
      # - PROXY_USERNAME=${PROXY_USERNAME}
      # - PROXY_PASSWORD=${PROXY_PASSWORD}
      # - TWOCAPTCHA_TOKEN=${TWOCAPTCHA_TOKEN}
      # - MAX_CONCURRENCY=${MAX_CONCURRENCY}
    networks:
      - backend

  api:
    image: trieve/firecrawl:latest # Using the pre-built image
    ports:
      - "3002:3002"
    environment:
      - REDIS_URL=redis://redis:6379
      - PLAYWRIGHT_MICROSERVICE_URL=http://puppeteer-service:3000 # Corrected to puppeteer
      - PORT=3002
      - HOST=0.0.0.0
      # Add any other required variables here
      # - TEST_API_KEY=${TEST_API_KEY}
    depends_on:
      - redis
      - puppeteer-service
    networks:
      - backend
    command: ["pnpm", "run", "start:production"]

  worker:
    image: trieve/firecrawl:latest # Using the same pre-built image
    environment:
      - REDIS_URL=redis://redis:6379
      - PLAYWRIGHT_MICROSERVICE_URL=http://puppeteer-service:3000 # Corrected to puppeteer
      - PORT=3003 # Using a different port to avoid conflict, just in case
      - HOST=0.0.0.0
      # Add any other required variables here
    depends_on:
      - redis
      - puppeteer-service
      - api
    networks:
      - backend
    command: ["pnpm", "run", "workers"]

  redis:
    image: redis:alpine
    networks:
      - backend
    command: redis-server --bind 0.0.0.0

networks:
  backend:
    driver: bridge
